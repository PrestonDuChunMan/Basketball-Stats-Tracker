{"ast":null,"code":"import { render } from '@testing-library/react';\nimport React, { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllPlayers = () => {\n  const fetchAllPlayers = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/players');\n      if (!response.ok) throw new Error('Network not ok');\n    } catch (error) {}\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_c = AllPlayers;\nexport default AllPlayers;\nvar _c;\n$RefreshReg$(_c, \"AllPlayers\");","map":{"version":3,"names":["render","React","useState","AllPlayers","fetchAllPlayers","response","fetch","ok","Error","error"],"sources":["C:/Users/User/Desktop/CSCI2720/demo-app/src/pages/AllPlayers.js"],"sourcesContent":["import { render } from '@testing-library/react';\r\nimport React, { useState } from 'react';\r\n\r\nconst AllPlayers = () => {\r\n    \r\n    const fetchAllPlayers = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:8080/players');\r\n            if (!response.ok)\r\n                throw new Error('Network not ok')\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AllPlayers;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,wBAAwB;AAC/C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAExC,MAAMC,UAAU,GAAG,MAAM;EAErB,MAAMC,eAAe,GAAG,YAAY;IAChC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;MAC7D,IAAI,CAACD,QAAQ,CAACE,EAAE,EACZ,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;IACzC,CAAC,CAAC,OAAOC,KAAK,EAAE,CAEhB;EACJ,CAAC;EAED,oBACI,qCAEG;AAEX,CAAC;AAAA,KAjBKN,UAAU;AAmBhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}