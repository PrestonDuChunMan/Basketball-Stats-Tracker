{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\CSCI2720\\\\demo-app\\\\src\\\\pages\\\\AddGameStats.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button, Form, InputGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddGameStats = () => {\n  _s();\n  const [numPlayers, setNumPlayers] = useState(0);\n  const [players, setPlayers] = useState([]);\n  const [selectedPlayers, setSelectedPlayers] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n\n  // Fetch players from the server\n  useEffect(() => {\n    const fetchPlayers = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/players');\n        const data = await response.json();\n        setPlayers(data);\n      } catch (error) {\n        console.error('Error fetching players:', error);\n      }\n    };\n    fetchPlayers();\n  }, []);\n  const handlePlayerSelect = (playerId, team) => {\n    setSelectedPlayers(prev => {\n      const existingPlayer = prev.find(p => p.id === playerId);\n      if (existingPlayer) {\n        return prev.map(p => p.id === playerId ? {\n          ...p,\n          team\n        } : p);\n      }\n      return [...prev, {\n        id: playerId,\n        team\n      }];\n    });\n  };\n  const handleSubmit = () => {\n    console.log('Selected Players:', selectedPlayers);\n    // Handle the submission of selected players\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Game Stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"numPlayers\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Number of Players\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          value: numPlayers,\n          onChange: e => setNumPlayers(e.target.value),\n          min: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => setShowModal(true),\n        children: \"Select Players\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => setShowModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Select Players\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: players.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                onChange: e => handlePlayerSelect(player.id, e.target.checked ? 'teamA' : ''),\n                \"aria-label\": \"Checkbox for player selection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: player.name,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              onChange: e => handlePlayerSelect(player.id, e.target.value),\n              defaultValue: \"teamA\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"teamA\",\n                children: \"Team A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"teamB\",\n                children: \"Team B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)\n        }, player.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Save Players\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(AddGameStats, \"t4AuSDZSbxwDgbrJjPk1lEUJ5pY=\");\n_c = AddGameStats;\nexport default AddGameStats;\nvar _c;\n$RefreshReg$(_c, \"AddGameStats\");","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","Form","InputGroup","AddGameStats","numPlayers","setNumPlayers","players","setPlayers","selectedPlayers","setSelectedPlayers","showModal","setShowModal","fetchPlayers","response","fetch","data","json","error","console","handlePlayerSelect","playerId","team","prev","existingPlayer","find","p","id","map","handleSubmit","log","e","target","value","player","checked","name"],"sources":["C:/Users/User/Desktop/CSCI2720/demo-app/src/pages/AddGameStats.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Modal, Button, Form, InputGroup } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst AddGameStats = () => {\r\n    const [numPlayers, setNumPlayers] = useState(0);\r\n    const [players, setPlayers] = useState([]);\r\n    const [selectedPlayers, setSelectedPlayers] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    // Fetch players from the server\r\n    useEffect(() => {\r\n        const fetchPlayers = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:8080/players');\r\n                const data = await response.json();\r\n                setPlayers(data);\r\n            } catch (error) {\r\n                console.error('Error fetching players:', error);\r\n            }\r\n        };\r\n\r\n        fetchPlayers();\r\n    }, []);\r\n\r\n    const handlePlayerSelect = (playerId, team) => {\r\n        setSelectedPlayers((prev) => {\r\n            const existingPlayer = prev.find(p => p.id === playerId);\r\n            if (existingPlayer) {\r\n                return prev.map(p =>\r\n                    p.id === playerId ? { ...p, team } : p\r\n                );\r\n            }\r\n            return [...prev, { id: playerId, team }];\r\n        });\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        console.log('Selected Players:', selectedPlayers);\r\n        // Handle the submission of selected players\r\n        setShowModal(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h2>Add Game Stats</h2>\r\n            <Form>\r\n                <Form.Group controlId=\"numPlayers\">\r\n                    <Form.Label>Number of Players</Form.Label>\r\n                    <Form.Control\r\n                        type=\"number\"\r\n                        value={numPlayers}\r\n                        onChange={(e) => setNumPlayers(e.target.value)}\r\n                        min={1}\r\n                    />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" onClick={() => setShowModal(true)}>\r\n                    Select Players\r\n                </Button>\r\n            </Form>\r\n\r\n            {/* Modal for selecting players */}\r\n            <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Select Players</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {players.map(player => (\r\n                        <div key={player.id} className=\"mb-2\">\r\n                            <InputGroup>\r\n                                <InputGroup.Text>\r\n                                    <Form.Check\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => handlePlayerSelect(player.id, e.target.checked ? 'teamA' : '')}\r\n                                        aria-label=\"Checkbox for player selection\"\r\n                                    />\r\n                                </InputGroup.Text>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    value={player.name}\r\n                                    readOnly\r\n                                />\r\n                                <Form.Select\r\n                                    onChange={(e) => handlePlayerSelect(player.id, e.target.value)}\r\n                                    defaultValue=\"teamA\"\r\n                                >\r\n                                    <option value=\"teamA\">Team A</option>\r\n                                    <option value=\"teamB\">Team B</option>\r\n                                </Form.Select>\r\n                            </InputGroup>\r\n                        </div>\r\n                    ))}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleSubmit}>\r\n                        Save Players\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddGameStats;"],"mappings":"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"},"metadata":{},"sourceType":"module"}